# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

references:
  node_container_config: &node_container_config
    docker:
      - image: circleci/node:8.11.1
    working_directory: ~/project

  gcloud_container_config: &gcloud_container_config
    docker:
      - image: google/cloud-sdk
    working_directory: ~/project

  workspace_root: &workspace_root
    /tmp/workspace

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  load_code: &load_code
    run:
      name: Load build from Workspace
      # Move all files and dotfiles to current directory
      command: mv /tmp/workspace/project/* /tmp/workspace/project/.[!.]* .

jobs:
  build:
    <<: *node_container_config
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      # Build
      - run:
          name: Nuxt bulid
          command: yarn run build
      # Persist to workspace
      - run:
          command: |
            mkdir -p /tmp/workspace/project
            mv * .[!.]* /tmp/workspace/project/
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - project

  deploy:
    <<: *gcloud_container_config
    steps:
      - *attach_workspace
      - *load_code
      - run:
          name: Store GCP Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Initialize Google Cloud SDK
          command: |
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Deploy to Google App Engine
          command: gcloud app deploy

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
